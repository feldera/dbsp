# .github/workflows/docs.yml

name: Publish documentation

on: [push, pull_request]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run
# in-progress and latest queued. However, do NOT cancel in-progress runs as we
# want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: "same_content_newer"
          cancel_others: "true"
          skip_after_successful_duplicate: "true"
          do_not_skip: '["workflow_dispatch", "schedule"]'
  build:
    permissions:
      contents: read
      packages: write
    runs-on: [self-hosted, skylake40]
    needs: [pre_job]
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    env:
      FORCE_COLOR: 1
    steps:
      - uses: earthly/actions/setup-earthly@v1
        with:
          version: v0.7.0
      - uses: actions/checkout@v3
        # By default a merge commit is checked out. If you look at the SHA that
        # is checked out, it doesn't match your local commit SHA. Rather it's
        # the SHA of a merge commit (your branch + base branch). So for
        # pull_request actions it won't match the commit ID on the branch. This
        # is confusing for storing benchmark results because the commit ID we
        # find during `git rev-parse` exists nowhere in the history. Since we
        # don't do merge commits anyways, we make sure we check out the head
        # commit (which will exist in the history).
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true

      - name: Earthly version
        run: earthly --version

      - name: Run CI
        run: earthly -P +build-sql-docs

      - name: Upload docs
        uses: actions/upload-pages-artifact@v1
        with:
          path: sql-docs

  # Deployment job
  deploy_docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2